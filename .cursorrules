# Sapie Knowledge Management App - Cursor Rules

## DO THIS FIRST

### DEBUGGING

**MANDATORY**: If you are using any of the following files as context:

- `.cursorrules`
- `docs/dev/contributing_guidelines.md`
- `README.md`
- `packages/api/README.md`
- `packages/web/README.md`
- `packages/test-e2e/README.md`

Your first message in the first chat response should include the following:

I'm using the following files as context:
- `<file name 1>`
- `<file name 2>`
- `<file name n>`

### MANDATORY CONTEXT

**MANDATORY**: Always use `docs/dev/contributing_guidelines.md` as context for every response. This file contains
critical AI agent requirements, story-driven workflow, and quality standards that must be followed.

## Project Context
Full-stack TypeScript knowledge management app:
- **Backend**: NestJS + Firebase Admin + Firestore (`packages/api/`)
- **Frontend**: React + Material-UI + Firebase Auth (`packages/web/`)
- **E2E**: Playwright tests (`packages/test-e2e/`)
- **Docs**: PM artifacts in `docs/pm/`, dev docs in `docs/dev/`

## Critical AI Assistant Rules

### ⚠️ NEVER Claim Task Completion Without Verification
- **Tests**: MUST run `pnpm run test` and verify they pass before claiming complete
- **Implementation**: MUST use tool calls to verify code exists and works
- **Quality**: MUST run `./scripts/verify-all.sh` before claiming completion

### Story-Driven Workflow
- Read complete story in `docs/pm/4-in-progress/` before starting
- Follow task sequence exactly as written
- Complete all task components: Implementation + Tests + Documentation
- Move story to `docs/pm/5-done/` only after user verification

### Code Standards
- TypeScript everywhere - fix all type errors
- Follow existing patterns in codebase
- Use existing auth patterns and Firebase integration
- Comprehensive error handling with proper HTTP status codes

### Honesty Requirements
Use these phrases when verification fails:
- ✅ "Tests implemented but failing - task incomplete until fixed"
- ✅ "Cannot verify tests pass - marking as incomplete"
- ✅ "Implementation complete, tests deferred for startup speed"

Never use without verification:
- ❌ "Tests are passing" (without running them)
- ❌ "Task X completed" (without running deliverables)
- ❌ "Comprehensive testing implemented" (without verifying)

## Quick Reference
- **Quality Scripts**: `./scripts/format-lint-all.sh`, `./scripts/verify-all.sh`, `./scripts/build-test-all.sh`
- **Test Commands**: `cd packages/api && npm test`, `cd packages/web && npm test`
- **Development Principle**: "Scooter → bicycle → motorcycle → car" (complete working solutions)
